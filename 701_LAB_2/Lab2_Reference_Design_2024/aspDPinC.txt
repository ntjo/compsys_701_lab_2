// aspdp in c

#include <stdio.h>
#include "system.h"
#include "stdbool.h"
#include "altera_avalon_pio_regs.h"
#include <stdint.h>

int main() {

    int dataNOCRD = IORD_ALTERA_AVALON_PIO_DATA(NOC_32_BASE);
	
	int dataNOCsplit[8];

	int addrNOCRD = IORD_ALTERA_AVALON_PIO_DATA(NOC_8_BASE);

    const int16_t posMax = 0x1000; 
    const int16_t negMax = 0xF000;
    const int32_t posToSend0 = (0x80000000 | posMax);
    const int32_t negToSend0 = (0x80000000 | negMax);
    const int32_t posToSend1 = (0x80010000 | posMax);
    const int32_t negToSend1 = (0x80010000 | negMax);
    int16_t combinedData = 0;
    
    while (1){

        int mask = 0xF;

		for (int i = 0; i < 8; i++) {
			dataNOCsplit[i] = (dataNOCRD >> (4 * i)) & mask;
		}

        
        // Combine lower 16 bits
        for (int i = 0; i < 4; i++) {
            combinedData |= (dataNOCsplit[i] & 0xF) << (4 * i);
        }

        if (combinedData & 0x8000){
            combinedData |= 0xF000;
        }

        // if recv.data(31 downto 28) = "1000" and recv.data(16) = '0' then
        if ((dataNOCsplit[7] == 8) && ((dataNOCsplit[4] & 0x1) == 0)) { 
            // shift left to multiply by 2
            int16_t shiftedData = combinedData << 1;
            // overflow
            if (shiftedData & 0x10000) {
                shiftedData = 0x7FFF; 
            }
            // vhdl stuff in c
            if (shiftedData >= posMax) {
                IOWR_ALTERA_AVALON_PIO_DATA(NOC_32_BASE, posToSend0);
            } else if (shiftedData <= negMax) {
                IOWR_ALTERA_AVALON_PIO_DATA(NOC_32_BASE, negToSend0);
            } else {
                int32_t toSend = (0x80000000 | shiftedData);
                IOWR_ALTERA_AVALON_PIO_DATA(NOC_32_BASE, toSend);
            }

        // if recv.data(31 downto 28) = "1000" and recv.data(16) = '1' then
		} else if ((dataNOCsplit[7] == 8) && ((dataNOCsplit[4] & 0x1) == 1) && (IORD_ALTERA_AVALON_PIO_DATA(BUTTON_PIO_BASE) == 5) ) {
			// shift left to multiply by 2
            int16_t shiftedData = combinedData << 1;
            // overflow
            if (shiftedData & 0x10000) {
                shiftedData = 0x7FFF; 
            }
            // vhdl stuff in c
            if (shiftedData >= posMax) {
                IOWR_ALTERA_AVALON_PIO_DATA(NOC_32_BASE, posToSend1);
            } else if (shiftedData <= negMax) {
                IOWR_ALTERA_AVALON_PIO_DATA(NOC_32_BASE, negToSend1);
            } else {
                int32_t toSend = (0x80010000 | shiftedData);
                IOWR_ALTERA_AVALON_PIO_DATA(NOC_32_BASE, toSend);
            }

		} else if ((dataNOCsplit[7] == 9)){
            // 
            uint8_t addr = (0x00 | dataNOCsplit[5]);
            IOWR_ALTERA_AVALON_PIO_DATA(NOC_8_BASE, addr);
        }
    }
}